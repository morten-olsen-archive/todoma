{"version":3,"sources":["ignored /usr/local/lib/node_modules/expo-cli/node_modules/hash-base/node_modules/readable-stream/lib util","ignored /usr/local/lib/node_modules/expo-cli/node_modules/hash-base/node_modules/readable-stream/lib/internal/streams util","ignored /usr/local/lib/node_modules/expo-cli/node_modules/readable-stream/lib util","ignored /usr/local/lib/node_modules/expo-cli/node_modules/readable-stream/lib/internal/streams util","ignored /usr/local/lib/node_modules/expo-cli/node_modules/diffie-hellman/node_modules/bn.js/lib buffer","ignored /usr/local/lib/node_modules/expo-cli/node_modules/miller-rabin/node_modules/bn.js/lib buffer","ignored /usr/local/lib/node_modules/expo-cli/node_modules/brorand crypto","ignored /usr/local/lib/node_modules/expo-cli/node_modules/browserify-sign/node_modules/readable-stream/lib util","ignored /usr/local/lib/node_modules/expo-cli/node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams util","ignored /usr/local/lib/node_modules/expo-cli/node_modules/bn.js/lib buffer","ignored /usr/local/lib/node_modules/expo-cli/node_modules/elliptic/node_modules/bn.js/lib buffer","ignored /usr/local/lib/node_modules/expo-cli/node_modules/asn1.js/node_modules/bn.js/lib buffer","ignored /usr/local/lib/node_modules/expo-cli/node_modules/create-ecdh/node_modules/bn.js/lib buffer","ignored /usr/local/lib/node_modules/expo-cli/node_modules/public-encrypt/node_modules/bn.js/lib buffer","src/models/RemoteTaskProvider.ts","src/models/RemoteTask.ts","src/models/LocalTask.ts","src/services/Providers.ts","src/services/Tasks.ts","src/models/index.ts","src/db/create.ts","src/providers/Github/index.ts","src/configs/db.web.ts","src/contexts/ServicesContext.tsx","src/hooks/useAsync.ts","src/hooks/useTasks.ts","src/typography/index.ts","src/components/base/Row/Cell.tsx","src/components/base/Row/PlaceholderIcon.tsx","src/components/base/Row/index.tsx","src/components/base/Button/index.tsx","src/components/base/Header/index.tsx","src/components/task/ListItem/Transition.tsx","src/components/task/ListItem/index.tsx","src/containers/tasks/Group.tsx","src/components/base/Input/index.tsx","src/hooks/useAddTask.ts","src/containers/tasks/AddToInbox/index.tsx","src/components/Page/index.tsx","src/screens/tasks/Today/index.tsx","src/containers/tasks/List.tsx","src/screens/tasks/Backlog.tsx","src/screens/tasks/Completed.tsx","src/screens/tasks/Watching.tsx","src/screens/tasks/Add/index.tsx","src/screens/more/Main/index.tsx","src/hooks/useTask.ts","src/screens/tasks/Details/index.tsx","src/Router/index.tsx","src/theme/Light.ts","src/App.tsx","src/index.ts"],"names":["RemoteTaskProvider","Entity","PrimaryColumn","Column","RemoteTask","nullable","ManyToOne","ManyToMany","LocalTask","task","remoteTasks","Tree","type","String","JoinTable","TreeChildren","TreeParent","ProviderFactories","factories","get","name","ProviderService","Service","providerList","connection","getProviderType","id","findOneOrFail","entity","getProvider","config","JSON","parse","providerTask","add","provider","nanoid","stringify","save","getRemoteTask","providerId","taskId","getTask","getRepository","TaskService","EventSubscriber","providerService","find","query","a","queryBuilder","createQueryBuilder","finalQueryBuilder","getManyAndCount","tasks","getById","relations","toggleCompleted","completionDate","Date","emit","togglePinned","pinned","setStatus","status","create","title","addRemoteTask","localId","remoteId","current","providerType","remoteTask","push","event","EventEmitter","models","resetDB","entities","entityMetadatas","map","repository","tableName","Promise","all","createDB","options","createConnection","synchronize","GithubProvider","token","split","repo","issueId","data","description","body","raw","dataType","pullRequest","open","state","headers","Authorization","axios","baseURL","setupGithubProvider","githubProvider","autoSave","location","ServicesContext","createContext","ServicesProvider","children","useState","undefined","error","setError","services","setServices","setup","useCallback","providerFactories","github","db","getConnection","dbConfig","Container","set","Connection","taskService","useEffect","catch","err","console","States","useAsync","fn","Loading","setState","result","setResult","update","Ready","Failed","useTasks","useContext","fetch","listener","addListener","removeListener","service","usePinnedQuery","pinnedQuery","q","where","useNextQuery","nextQuery","BaseText","styled","Text","color","theme","colors","text","bold","font","baseSize","Jumbo","Title2","Title1","Body1","Overline","Caption","Link","Wrapper","View","margins","medium","background","flex","direction","align","Touch","TouchableOpacity","Cell","onPress","others","node","Icon","size","PlaceholderIcon","Children","componentOrString","input","Component","Row","top","left","right","overline","primary","small","sizes","corners","Button","Header","back","actions","navigation","useNavigation","insets","useSafeAreaInsets","marginTop","goBack","action","ListItemTransition","icon","transition","allowedTransitions","changeStatus","includes","ListItem","TaskGroup","length","navigate","screen","params","InputField","TextInput","shade","Input","label","value","onChangeText","useAddTask","addTask","AddToInbox","useTheme","setValue","Keyboard","dismiss","KeyboardAvoiding","KeyboardAvoidingView","Page","keyboardShown","setKeyboardShown","keyboardDidShow","keyboardDidHide","backgroundColor","Platform","OS","Scroll","ScrollView","TaskListScreen","TaskList","grouped","useMemo","flattended","reduce","output","inbox","startDate","future","onHold","filter","i","item","section","BacklogScreen","IsNull","In","CompletedScreen","Not","WatchingScreen","setTitle","MoreMain","TaskDetails","route","useRoute","useTask","TaskStack","createStackNavigator","TaskStackScreen","headerShown","MoreStack","MoreStackScreen","Watching","Completed","MainTab","createBottomTabNavigator","MainTabScreen","tabBarIcon","Today","Backlog","RootStack","RootStackScreen","presentation","AddTask","Router","lightTheme","secondary","large","App","light","Expo"],"mappings":"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","file":"static/js/app.b66e7453.chunk.js","sourcesContent":["/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Entity, PrimaryColumn, Column, OneToMany } from 'typeorm';\n\n@Entity()\nclass RemoteTaskProvider {\n  @PrimaryColumn()\n  public id!: string;\n\n  @Column()\n  public type!: string;\n\n  @Column()\n  public config!: string;\n}\n\nexport default RemoteTaskProvider;\n","import { Entity, PrimaryColumn, Column, ManyToOne, ManyToMany } from 'typeorm';\nimport RemoteTaskProvider from './RemoteTaskProvider';\nimport LocalTask from './LocalTask';\n\n@Entity()\nclass RemoteTask {\n  @PrimaryColumn()\n  public id!: string;\n\n  @Column({ nullable: true })\n  public title?: string;\n\n  @Column({ nullable: true })\n  public dataType?: string;\n\n  @Column({ nullable: true })\n  public description?: string;\n\n  @Column({ nullable: true })\n  public open?: boolean;\n\n  @Column({ nullable: true })\n  public raw?: string;\n\n  @Column()\n  public read!: boolean;\n\n  @ManyToOne(() => RemoteTaskProvider)\n  public provider!: RemoteTaskProvider;\n\n  @ManyToMany(() => LocalTask, task => task.remoteTasks)\n  public localTasks!: LocalTask[];\n}\n\nexport default RemoteTask;\n","import { Entity, PrimaryColumn, Column, Tree, ManyToMany, JoinTable, TreeChildren, TreeParent } from 'typeorm';\nimport RemoteTask from './RemoteTask';\n\ntype Statuses =\n  'inbox'\n  | 'watching'\n  | 'backlog'\n  | 'next'\n  | 'on-hold'\n\n@Entity()\n@Tree(\"closure-table\")\nclass LocalTask {\n  @PrimaryColumn()\n  public id!: string;\n\n  @Column()\n  public title!: string;\n\n  @Column({ type: String })\n  public status!: Statuses;\n\n  @Column({ nullable: true })\n  public description?: string;\n\n  @Column({ nullable: true })\n  public completionDate?: Date | null;\n\n  @Column({ nullable: true })\n  public pinned?: boolean;\n\n  @Column({ nullable: true })\n  public startDate?: Date;\n\n  @Column({ nullable: true })\n  public deadline?: Date;\n\n  @ManyToMany(() => RemoteTask)\n  @JoinTable()\n  public remoteTasks!: RemoteTask[];\n\n  // TODO: Add context, location(?), correspondant(?)\n\n  @TreeChildren()\n  public children!: LocalTask[];\n\n  @TreeParent()\n  public parent?: LocalTask;\n}\n\nexport type { Statuses };\n\nexport default LocalTask;\n","import { Service } from 'typedi';\nimport { Connection, Repository } from 'typeorm';\nimport { nanoid } from 'nanoid';\nimport RemoteTaskProvider from '../models/RemoteTaskProvider';\nimport RemoteTask from '../models/RemoteTask';\n\ninterface Provider {\n  getTask: <T extends RemoteTask>(id: string) => Promise<T>;\n}\n\ntype ProviderFactoryList = {\n  [name: string]: (config: any) => Promise<Provider>;\n}\n\nclass ProviderFactories {\n  #factories: ProviderFactoryList;\n  \n  constructor(factories: ProviderFactoryList) {\n    this.#factories = factories;\n  }\n\n  public get = (name: string) => {\n    return this.#factories[name];\n  };\n}\n\n@Service()\nclass ProviderService {\n  #providers: {[name: string]: Promise<Provider>} = {};\n  #providerList: ProviderFactories;\n  #providerRepo: Repository<RemoteTaskProvider>;\n\n  constructor(\n    providerList: ProviderFactories,\n    connection: Connection,\n  ) {\n    this.#providerList = providerList;\n    this.#providerRepo = connection.getRepository(RemoteTaskProvider);\n  }\n\n  public getProviderType = async (id: string) => {\n    const entity = await this.#providerRepo.findOneOrFail({ id });\n    return entity;\n  }\n\n  public getProvider = async (id: string) => {\n    if (!this.#providers[id]) {\n      const entity = await this.#providerRepo.findOneOrFail({ id });\n      const config = JSON.parse(entity.config);\n      const providerTask = this.#providerList.get(entity.type)(config);\n      this.#providers[id] = providerTask;\n    }\n    return this.#providers[id];\n  }\n\n  public add = async (type: string, config: any) => {\n    const provider = new RemoteTaskProvider();\n    provider.id = nanoid();\n    provider.type = type;\n    provider.config = JSON.stringify(config);\n    await this.#providerRepo.save(provider);\n    return provider;\n  }\n\n  public getRemoteTask = async (providerId: string, taskId: string) => {\n    const provider = await this.getProvider(providerId);\n    const task = await provider.getTask(taskId);\n    return task;\n  }\n}\n\nexport { Provider, ProviderFactories, ProviderFactoryList };\n\nexport default ProviderService;\n","import { Service } from 'typedi';\nimport { Connection, EntitySubscriberInterface, EventSubscriber, InsertEvent, RemoveEvent, Repository, SelectQueryBuilder, UpdateEvent } from 'typeorm';\nimport { nanoid } from 'nanoid';\nimport EventEmitter from 'eventemitter3';\nimport LocalTask, { Statuses } from '../models/LocalTask';\nimport RemoteTask from '../models/RemoteTask';\nimport ProviderService from '../services/Providers';\n\ninterface Events {\n  taskUpdated: (id?: string) => void;\n}\n\ntype Query = (query: SelectQueryBuilder<LocalTask>) => SelectQueryBuilder<LocalTask>;\n\n@Service()\n@EventSubscriber()\nclass TaskService extends EventEmitter<Events> implements EntitySubscriberInterface<LocalTask> {\n  #localTaskRepo: Repository<LocalTask>;\n  #remoteTaskRepo: Repository<RemoteTask>;\n  #providerService: ProviderService;\n\n  constructor(\n    connection: Connection,\n    providerService: ProviderService,\n  ) {\n    super();\n    this.#providerService = providerService;\n    this.#localTaskRepo = connection.getRepository(LocalTask);\n    this.#remoteTaskRepo = connection.getRepository(RemoteTask);\n  }\n\n  listenTo() {\n    return LocalTask;\n  }\n\n  afterUpdate(event: UpdateEvent<LocalTask>) {\n    this.emit('taskUpdated', event.entity?.id);\n  }\n \n  afterRemove(event: RemoveEvent<LocalTask>) {\n    this.emit('taskUpdated', event.entity?.id);\n  }\n \n  afterInsert(event: InsertEvent<LocalTask>) {\n    this.emit('taskUpdated', event.entity?.id);\n  }\n \n  public find = async (\n    query: Query = a => a,\n  ) => {\n    const queryBuilder = this.#localTaskRepo.createQueryBuilder();\n    const finalQueryBuilder = query(queryBuilder);\n    const tasks = await finalQueryBuilder.getManyAndCount();\n    return tasks;\n  }\n\n  public getById = async (id: string) => {\n    const task = await this.#localTaskRepo.findOneOrFail({ id }, {\n      relations: ['remoteTasks'],\n    });\n    return task;\n  }\n\n  public toggleCompleted = async (task: LocalTask) => {\n    task.completionDate = task.completionDate ? null : new Date();\n    await this.#localTaskRepo.save(task);\n    this.emit('taskUpdated', task.id);\n  }\n\n  public togglePinned = async (task: LocalTask) => {\n    task.pinned = !task.pinned;\n    await this.#localTaskRepo.save(task);\n    this.emit('taskUpdated', task.id);\n  }\n\n  public setStatus = async (task: LocalTask, status: Statuses) => {\n    task.status = status;\n    await this.#localTaskRepo.save(task);\n    this.emit('taskUpdated', task.id);\n  }\n\n  public create = async (title: string) => {\n    const task = this.#localTaskRepo.create({\n      id: nanoid(),\n      title: title,\n      status: 'inbox',\n    });\n    await this.#localTaskRepo.save(task);\n    this.emit('taskUpdated', task.id);\n    return task;\n  }\n\n  public addRemoteTask = async (localId: string, remoteId: string, providerId: string) => {\n    const current = await this.getById(localId);\n    const providerType = await this.#providerService.getProviderType(providerId);\n    const remoteTask = await this.#providerService.getRemoteTask(providerId, remoteId)\n    remoteTask.provider = providerType;\n    await this.#remoteTaskRepo.save(remoteTask);\n    current.remoteTasks.push(remoteTask);\n    await this.#localTaskRepo.save(current);\n    this.emit('taskUpdated', current.id);\n    return current;\n  };\n}\n\nexport type { Query };\n\nexport default TaskService;\n","import LocalTask from './LocalTask';\nimport RemoteTask from './RemoteTask';\nimport RemoteTaskProvider from './RemoteTaskProvider';\n\nconst models = [\n  LocalTask,\n  RemoteTask,\n  RemoteTaskProvider,\n];\n\nexport default models;\n","import { createConnection, ConnectionOptions, Connection } from 'typeorm';\nimport models from 'models';\n\nconst resetDB = async (connection: Connection) => {\n  const entities = connection.entityMetadatas;\n\n  const tasks = entities.map(async (entity) => {\n    const repository = connection.getRepository(entity.name);\n    await repository.query(`DELETE FROM ${entity.tableName}`);\n  });\n\n  await Promise.all(tasks);\n};\n\nconst createDB = async (options: ConnectionOptions) => {\n  const connection = await createConnection({\n    ...options,\n    entities: [\n      ...models,\n      ...options.entities || [],\n    ],\n  });\n  await connection.synchronize();\n\n  return connection;\n};\n\nexport { resetDB };\n\nexport default createDB;\n","import axios, { AxiosInstance } from 'axios';\nimport RemoteTask from 'models/RemoteTask';\nimport { Provider } from 'services/Providers';\n\ninterface Config {\n  token?: string;\n}\n\nclass GithubProvider implements Provider {\n  #http: AxiosInstance;\n\n  constructor({ token }: Config) {\n    const headers: {[name: string]: string} = {};\n    if (token) {\n      headers.Authorization = `Bearer ${token}`;\n    }\n    this.#http = axios.create({\n      baseURL: 'https://api.github.com',\n      headers,\n    });\n  }\n\n  get http() {\n    return this.#http;\n  }\n\n  public getTask = async (id: string) => {\n    const [repo, issueId] = id.split('|');\n    const { data } = await this.#http.get(`/repos/${repo}/issues/${issueId}`);\n    const task = new RemoteTask();\n    task.id = id;\n    task.title = data.title;\n    task.description = data.body;\n    task.raw = JSON.stringify(data);\n    task.dataType = data.pullRequest ? 'github-pr' : 'github-issue';\n    task.open = data.state === 'open';\n    return data;\n  };\n}\n\nconst setupGithubProvider = async (config: any) => {\n  const githubProvider = new GithubProvider(config.token);\n  return githubProvider;\n};\n\nexport { GithubProvider, setupGithubProvider };\n\nexport default setupGithubProvider;\n","import { ConnectionOptions } from 'typeorm';\n\nconst config: ConnectionOptions = {\n  type: 'sqljs',\n  autoSave: true,\n  location: 'data',\n};\n\nexport default config;\n","import React, { createContext, useState, useCallback, useEffect } from 'react';\nimport { Container } from 'typedi';\nimport TaskService from 'services/Tasks';\nimport createDB from 'db/create';\nimport ProviderService, { ProviderFactories } from 'services/Providers';\nimport githubProvider from 'providers/Github';\nimport dbConfig from 'configs/db';\nimport { Connection, getConnection } from 'typeorm';\n\ninterface ServicesContextValue {\n  taskService: TaskService;\n  providerService: ProviderService;\n}\n\nconst ServicesContext = createContext<ServicesContextValue>({} as any);\n\nconst ServicesProvider: React.FC = ({ children }) => {\n  const [error, setError] = useState<any>(undefined);\n  const [services, setServices] = useState<ServicesContextValue | undefined>(undefined);\n  const setup = useCallback(async () => {\n    const providerFactories = new ProviderFactories({\n      github: githubProvider,\n    });\n    let db: Connection;\n    try {\n      db = getConnection();\n    } catch (err) {\n      db = await createDB(dbConfig);\n    }\n    Container.set(Connection, db);\n    Container.set(ProviderFactories, providerFactories);\n    const providerService = Container.get(ProviderService);\n    const taskService = Container.get(TaskService);\n    setServices({\n      taskService,\n      providerService,\n    })\n  }, []);\n  useEffect(() => {\n    setup().catch((err) => {\n      setError(err);\n      console.error(err);\n    });\n  }, []);\n  if (!services) {\n    return <></>;\n  }\n  return (\n    <ServicesContext.Provider value={services}>\n      {children}\n    </ServicesContext.Provider>\n  );\n};\n\nexport { ServicesProvider };\n\nexport default ServicesContext;\n","import { useState, useEffect, useCallback } from 'react';\n\nenum States {\n  Loading = 'loading',\n  Refreshing = 'refreshing',\n  Ready = 'ready',\n  Failed = 'failed',\n}\n\nconst useAsync = <T>(fn: () => Promise<T>) => {\n  const [state, setState] = useState<States>(States.Loading);\n  const [error, setError] = useState<any>(undefined);\n  const [result, setResult] = useState<T | undefined>(undefined);\n  const update = useCallback(async () => {\n    setError(undefined);\n    try {\n      setResult(await fn());\n      setState(States.Ready)\n    } catch (err) {\n      setError(err)\n      setState(States.Failed)\n      console.error(err);\n    }\n  }, [fn]);\n\n  useEffect(() => {\n    update();\n  }, [update]);\n\n  return {\n    state,\n    error,\n    result,\n    update,\n  };\n};\n\nexport { States };\n\nexport default useAsync;\n","import { useContext, useCallback, useEffect } from 'react';\nimport ServicesContext from 'contexts/ServicesContext';\nimport useAsync from './useAsync';\nimport LocalTask from 'models/LocalTask';\nimport type { Query } from 'services/Tasks';\n\nconst useTasks = (query?: Query) => {\n  const { taskService } = useContext(ServicesContext);\n  const fetch = useCallback(async () => {\n    const [result] = await taskService.find(query);\n    return result;\n  }, [query]);\n  const current = useAsync(fetch);\n\n  const toggleCompleted = useCallback(async (task: LocalTask) => {\n    await taskService.toggleCompleted(task);\n  }, [taskService, current.update]);\n\n  const togglePinned = useCallback(async (task: LocalTask) => {\n    await taskService.togglePinned(task);\n  }, [taskService, current.update]);\n\n  useEffect(() => {\n    const listener = () => {\n      current.update();\n    };\n    taskService.addListener('taskUpdated', listener);\n    return () => {\n      taskService.removeListener('taskUpdated', listener);\n    };\n  }, [taskService]);\n\n  return {\n    ...current,\n    toggleCompleted,\n    togglePinned,\n    service: taskService,\n  };\n};\n\nconst usePinnedQuery = () => {\n  const pinnedQuery: Query = useCallback(q => q.where({ pinned: true }), []);\n  return pinnedQuery;\n}\n\nconst useNextQuery = () => {\n  const nextQuery: Query = useCallback(\n    q => q\n      .where({\n        completionDate: null,\n        status: 'next',\n      }),\n    [],\n  );\n  return nextQuery;\n};\n\nexport type { Query };\nexport { usePinnedQuery, useNextQuery };\nexport default useTasks;\n","import styled from 'styled-components/native';\nimport { Theme } from 'theme';\n\ninterface TextProps {\n  color?: keyof Theme['colors'];\n  bold?: boolean;\n  theme: Theme;\n}\n\nconst BaseText = styled.Text<TextProps>`\n  color: ${({ color, theme }) => color ? theme.colors[color] : theme.colors.text};\n  font-weight: ${({ bold }) => bold ? 'bold' : 'normal'};\n  font-size: ${({ theme }) => theme.font.baseSize}px;\n`;\n\nconst Jumbo =  styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 2.8}px;\n  font-weight: bold;\n`;\n\n\nconst Title2 =  styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 1.3}px;\n  font-weight: bold;\n`;\n\nconst Title1 =  styled(BaseText)`\n  font-weight: bold;\n`;\n\nconst Body1 =  styled(BaseText)`\n`;\n\nconst Overline =  styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 0.6}px;\n  text-transform: uppercase;\n`;\n\nconst Caption =  styled(BaseText)`\n  font-size: ${({ theme }) => theme.font.baseSize * 0.8}px;\n`;\n\nconst Link =  styled(BaseText)`\n  text-transform: uppercase;\n`;\n\n\nexport type { TextProps };\nexport {\n  Jumbo,\n  Title2,\n  Title1,\n  Body1,\n  Overline,\n  Caption,\n  Link,\n};\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components/native';\nimport { Theme } from 'theme';\n\ninterface Props {\n  children?: ReactNode;\n  onPress?: () => any;\n  background?: string;\n  flex?: string | number;\n  direction?: 'row' | 'column';\n  align?: 'flex-start' | 'flex-end' | 'center';\n}\n\nconst Wrapper = styled.View<{\n  background?: string;\n  flex?: string | number;\n  direction?: 'row' | 'column';\n  theme: Theme;\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch';\n}>`\n  padding: ${({ theme}) => theme.margins.medium / 2}px;\n  ${({ background }) => background ? `background: ${background};` : ''}\n  ${({ flex }) => flex ? `flex: ${flex};` : ''}\n  flex-direction: ${({ direction }) => direction ? direction : 'row'};\n  align-items: ${({ align }) => align ? align : 'center'};\n`;\n\nconst Touch = styled.TouchableOpacity``;\n\nconst Cell: React.FC<Props> = ({ children, onPress, ...others }) => {\n  const node = (\n    <Wrapper {...others}>\n      {children}\n    </Wrapper>\n  );\n  if (onPress) {\n    return (\n      <Touch onPress={onPress}>\n        {node}\n      </Touch>\n    );\n  }\n  return node;\n};\n\nexport default Cell;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport Cell from './Cell';\n\ninterface Props {\n  color?: string;\n  size?: number;\n  onPress?: () => void;\n}\n\nconst Icon = styled.View<{ size: number, color: string }>`\n  background: ${({ color }) => color};\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  border-radius: ${({ size }) => size / 4}px;\n`;\n\nconst PlaceholderIcon: React.FC<Props> = ({ color = 'red', size = 24, onPress }) => (\n  <Cell onPress={onPress}>\n    <Icon color={color} size={size} />\n  </Cell>\n);\n\nexport default PlaceholderIcon;\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components/native';\nimport { Title1, Body1, Overline } from 'typography';\nimport Cell from './Cell';\nimport PlaceholderIcon from './PlaceholderIcon';\n\ninterface Props {\n  background?: string;\n  top?: ReactNode;\n  left?: ReactNode;\n  right?: ReactNode;\n  title?: ReactNode;\n  overline?: ReactNode;\n  description?: ReactNode;\n  children?: ReactNode;\n  onPress?: () => any;\n}\n\nconst Children = styled.View``;\n\nconst componentOrString = (input: ReactNode, Component: React.FC<{ children: ReactNode }>) => {\n  if (!input) {\n    return null;\n  }\n  if (typeof input === 'string') {\n    return <Component>{input}</Component>;\n  }\n  return input;\n}\n\nconst Row: React.FC<Props> = ({\n  background,\n  top,\n  left,\n  right,\n  title,\n  overline,\n  description,\n  children,\n  onPress,\n}) => (\n  <Cell background={background} onPress={onPress}>\n    {left}\n    <Cell flex={1} direction=\"column\" align=\"stretch\">\n      {!!top}\n      {componentOrString(overline, Overline)}\n      {componentOrString(title, Title1)}\n      {componentOrString(description, Body1)}\n      {!!children && <Children>{children}</Children>}\n    </Cell>\n    {right}\n  </Cell>\n);\n\nexport { Cell, PlaceholderIcon };\nexport default Row;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Theme } from 'theme';\nimport { Link } from 'typography';\n\ninterface Props {\n  title: string;\n  onPress?: () => any;\n  type?: 'primary' | 'secondary' | 'destructive';\n}\n\nconst Touch = styled.TouchableOpacity``;\n\nconst Wrapper = styled.View<{ theme: Theme }>`\n  background: ${({ theme }) => theme.colors.primary};\n  padding: ${({ theme }) => theme.margins.small}px;\n  border-radius: ${({ theme }) => theme.sizes.corners}px;\n`;\n\nconst Button: React.FC<Props> = ({ title, onPress, type }) => (\n  <Touch onPress={onPress}>\n    <Wrapper>\n      <Link style={{ color: '#fff' }}>{title}</Link>\n    </Wrapper>\n  </Touch>\n);\n\nexport default Button;\n","import React, { ReactNode } from 'react';\nimport { View } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport Row, { Cell } from 'components/base/Row';\nimport Button from 'components/base/Button';\nimport { Jumbo } from 'typography';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\ninterface Props {\n  title: string;\n  back?: boolean;\n  actions?: {\n    title: string;\n    onPress?: () => any;\n  }[];\n  right?: ReactNode;\n}\n\nconst Header: React.FC<Props> = ({ title, back, actions, right }) => {\n  const navigation = useNavigation();\n  const insets = useSafeAreaInsets();\n\n  return (\n    <View style={{ marginTop: insets.top }}>\n      <Row\n        left={!!back && (\n          <Cell onPress={() => navigation.goBack()}>\n            <Ionicons name=\"arrow-back-circle\" size={26} />\n          </Cell>\n        )}\n        right={(actions || right) && (\n          <>\n            {actions && actions.map((action) => (\n              <Button\n                key={action.title}\n                title={action.title}\n                onPress={action.onPress}\n              />\n            ))}\n            {right}\n          </>\n        )}\n      >\n        <Jumbo>{title}</Jumbo>\n      </Row>\n    </View>\n  );\n}\n\nexport default Header;\n","import React, { ReactNode } from 'react';\nimport { Cell } from 'components/base/Row';\nimport LocalTask, { Statuses } from 'models/LocalTask';\n\ninterface Props {\n  task: LocalTask;\n  icon: ReactNode;\n  allowedTransitions?: Statuses[];\n  transition: Statuses;\n  changeStatus?: (status: Statuses) => any;\n}\n\nconst ListItemTransition: React.FC<Props> = ({ icon, task, transition, allowedTransitions, changeStatus }) => {\n  if (\n    !changeStatus ||\n    (task.status === transition) ||\n    (allowedTransitions && !allowedTransitions.includes(transition))\n  ) {\n    return <></>;\n  }\n  return (\n    <Cell onPress={() => changeStatus(transition)}>\n      {icon}\n    </Cell>\n  );\n};\n\nexport default ListItemTransition;\n","import React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport Row, { Cell } from 'components/base/Row';\nimport LocalTask, { Statuses } from 'models/LocalTask';\nimport Transition from './Transition';\n\ninterface Props {\n  task: LocalTask;\n  allowedTransitions?: Statuses[];\n  onPress?: () => any;\n  toggleCompleted?: () => any;\n  togglePinned?: () => any;\n  changeStatus?: (status: Statuses) => any;\n}\n\nconst ListItem: React.FC<Props> = ({\n  task,\n  toggleCompleted,\n  togglePinned,\n  onPress,\n  changeStatus,\n  allowedTransitions,\n}) => {\n  return (\n    <Row\n      onPress={onPress}\n      left={(\n        <Cell onPress={toggleCompleted}>\n          {task.completionDate ? (\n            <Ionicons size={26} name=\"checkmark-circle-outline\" />\n          ) : (\n            <Ionicons size={26} name=\"radio-button-off-outline\" />\n          )}\n        </Cell>\n      )}\n      title={task.title}\n      right={(\n        <>\n          <Transition\n            task={task}\n            allowedTransitions={allowedTransitions}\n            transition=\"inbox\"\n            icon={<Ionicons name=\"mail-open-outline\" size={26} />}\n            changeStatus={changeStatus}\n          />\n          <Transition\n            task={task}\n            icon={<Ionicons name=\"eye-outline\" size={26} />}\n            allowedTransitions={allowedTransitions}\n            transition=\"watching\"\n            changeStatus={changeStatus}\n          />\n          <Transition\n            task={task}\n            icon={<Ionicons name=\"albums-outline\" size={26} />}\n            allowedTransitions={allowedTransitions}\n            transition=\"backlog\"\n            changeStatus={changeStatus}\n          />\n          <Transition\n            task={task}\n            icon={<Ionicons name=\"bookmark-outline\" size={26} />}\n            allowedTransitions={allowedTransitions}\n            transition=\"next\"\n            changeStatus={changeStatus}\n          />\n          {togglePinned && (\n            <Cell onPress={togglePinned}>\n              <Ionicons\n                name={task.pinned ? 'star' : 'star-outline'}\n                size={26}\n              />\n            </Cell>\n          )}\n        </>\n      )}\n    />\n  );\n};\n\nexport default ListItem;\n","import React from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport useTasks, { Query } from 'hooks/useTasks';\nimport TaskListItem from 'components/task/ListItem';\nimport Row from 'components/base/Row';\nimport { RootStackNavigationProps } from 'Router';\n\ninterface Props {\n  title?: string;\n  query?: Query;\n}\n\nconst TaskGroup: React.FC<Props> = ({ title, query }) => {\n  const navigation = useNavigation<RootStackNavigationProps>();\n  const tasks = useTasks(query);\n  if (tasks.state === 'loading' || !tasks.result || tasks.result.length < 1) {\n    return <></>\n  }\n  return (\n    <>\n      {title && <Row title={title} />}\n      {tasks.result && tasks.result.map((task) => (\n        <TaskListItem\n          key={task.id}\n          task={task}\n          onPress={() => navigation.navigate('Task', {\n            screen: 'TaskDetails',\n            params: { id: task.id }\n          })}\n          togglePinned={() => tasks.togglePinned(task)}\n          toggleCompleted={() => tasks.toggleCompleted(task)}\n        />\n      ))}\n    </>\n  )\n};\n\nexport default TaskGroup;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { Theme } from 'theme';\n\ninterface Props {\n  label: string;\n  value: string;\n  onChangeText: (text: string) => any;\n}\n\nconst InputField = styled.TextInput<{ theme: Theme }>`\n  background: ${({ theme }) => theme.colors.shade};\n  color: ${({ theme }) => theme.colors.text};\n  padding: ${({ theme }) => theme.margins.small}px;\n  font-size: ${({ theme }) => theme.font.baseSize}px;\n  border-radius: ${({ theme }) => theme.sizes.corners}px;\n  width: 100%;\n`;\n\nconst Input: React.FC<Props> = ({ label, value, onChangeText }) => (\n  <InputField\n    value={value}\n    placeholder={label}\n    onChangeText={onChangeText}\n  />\n);\n\nexport default Input;\n","import { useContext, useCallback } from 'react';\nimport ServicesContext from 'contexts/ServicesContext';\n\nconst useAddTask = () => {\n  const { taskService } = useContext(ServicesContext);\n  const addTask = useCallback(async (title: string) => {\n    await taskService.create(title);\n  }, [taskService]);\n  return addTask;\n};\n\nexport default useAddTask;\n","import React, { useState, useCallback } from 'react';\nimport { Ionicons } from '@expo/vector-icons'\nimport { useTheme } from 'styled-components/native';\nimport { Keyboard } from 'react-native';\nimport { Theme } from 'theme';\nimport Row, { Cell } from 'components/base/Row';\nimport Input from 'components/base/Input';\nimport useAddTask from 'hooks/useAddTask';\n\nconst AddToInbox: React.FC<{}> = () => {\n  const theme = useTheme()\n  const addTask = useAddTask();\n  const [value, setValue] = useState('');\n\n  const add = useCallback(async () => {\n    await addTask(value);\n    setValue('');\n    Keyboard.dismiss();\n  }, [addTask, value]);\n\n  return (\n    <Row\n      right={(\n        <Cell onPress={add}>\n          <Ionicons\n            name=\"add-circle-outline\"\n            size={26}\n            color={theme.colors.primary}\n          />\n        </Cell>\n      )}\n    >\n      <Input\n        label=\"Add task to inbox\"\n        value={value}\n        onChangeText={setValue}\n      />\n    </Row>\n  )\n};\n\nexport default AddToInbox;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport { Keyboard, Pressable, Platform } from 'react-native';\n\nconst KeyboardAvoiding = styled.KeyboardAvoidingView`\n  flex: 1;\n`;\n\nconst Page: React.FC = ({ children }) => {\n  const [keyboardShown, setKeyboardShown] = useState(false);\n  useEffect(() => {\n    const keyboardDidShow = () => setKeyboardShown(true);\n    const keyboardDidHide = () => setKeyboardShown(false);\n    Keyboard.addListener(\"keyboardDidShow\", keyboardDidShow);\n    Keyboard.addListener(\"keyboardDidHide\", keyboardDidHide);\n\n    return () => {\n      Keyboard.removeListener(\"keyboardDidShow\", keyboardDidShow);\n      Keyboard.removeListener(\"keyboardDidHide\", keyboardDidHide);\n    };\n  }, []);\n  return (\n    <Pressable\n      style={{ backgroundColor: '#fff', flex: 1 }}\n      disabled={!keyboardShown}\n      onPress={() => Keyboard.dismiss()}\n    >\n      <KeyboardAvoiding behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        {children}\n      </KeyboardAvoiding>\n    </Pressable>\n  );\n};\n\nexport default Page;\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components/native';\nimport { useNavigation } from '@react-navigation/native';\nimport { useNextQuery, usePinnedQuery } from 'hooks/useTasks';\nimport Header from 'components/base/Header';\nimport { RootStackNavigationProps } from 'Router';\nimport TaskGroup from 'containers/tasks/Group';\nimport AddToInbox from 'containers/tasks/AddToInbox';\nimport Page from 'components/Page';\n\nconst Scroll = styled.ScrollView`\n  flex: 1;\n`\n\nconst TaskListScreen: React.FC<{}> = () => {\n  const navigation = useNavigation<RootStackNavigationProps>();\n  const add = useCallback(async () => {\n    navigation.navigate('AddTask');\n  }, []);\n  const nextQuery = useNextQuery();\n  const pinnedQuery = usePinnedQuery();\n\n  return (\n    <Page>\n      <Header title=\"Today\" />\n      <AddToInbox />\n      <Scroll>\n        <TaskGroup title=\"Focus\" query={pinnedQuery} />\n        <TaskGroup title=\"Next\" query={nextQuery} />\n      </Scroll>\n    </Page>\n  )\n};\n\nexport default TaskListScreen;\n","import React, { useMemo, useCallback } from 'react';\nimport { SectionList } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport useTasks, { Query } from 'hooks/useTasks';\nimport TaskListItem from 'components/task/ListItem';\nimport Row from 'components/base/Row';\nimport { RootStackNavigationProps } from 'Router';\nimport LocalTask, { Statuses } from 'models/LocalTask';\n\ninterface Props {\n  query?: Query;\n}\n\ninterface Flattended {\n  inbox: LocalTask[];\n  current: LocalTask[];\n  future: LocalTask[];\n  onHold: LocalTask[];\n}\n\nconst TaskList: React.FC<Props> = ({ query }) => {\n  const navigation = useNavigation<RootStackNavigationProps>();\n  const tasks = useTasks(query);\n  const setStatus = useCallback(async (task: LocalTask, status: Statuses) => {\n    await tasks.service.setStatus(task, status);\n  }, [tasks.service]);\n  const grouped = useMemo(\n    () => {\n      const flattended = (tasks.result || []).reduce((output, current) => {\n        if (current.status === 'inbox') {\n          output.inbox.push(current);\n        } else if (current.startDate && current.startDate > new Date()) {\n          output.future.push(current);\n        } else if (current.status === 'on-hold') {\n          output.onHold.push(current);\n        } else {\n          output.current.push(current);\n        }\n        return output;\n      }, { inbox: [], current: [], future: [], onHold: [] } as Flattended);\n      return [{\n        title: 'Inbox',\n        data: flattended.inbox,\n      }, {\n        title: 'Ready',\n        data: flattended.current,\n      }, {\n        title: 'On hold',\n        data: flattended.onHold,\n      }, {\n        title: 'Future',\n        data: flattended.future,\n      }].filter(i => i.data.length > 0);\n    },\n    [tasks.result],\n  );\n\n  return (\n    <SectionList\n      style={{ flex: 1 }}\n      sections={grouped}\n      keyExtractor={item => item.id}\n      renderSectionHeader={({ section: { title } }) => (\n        <Row title={title} background=\"#fff\" />\n      )}\n      renderItem={({ item: task}) => (\n        <TaskListItem\n          key={task.id}\n          task={task}\n          onPress={() => navigation.navigate('Task', {\n            screen: 'TaskDetails',\n            params: { id: task.id }\n          })}\n          changeStatus={(status) => setStatus(task, status)}\n          togglePinned={() => tasks.togglePinned(task)}\n          toggleCompleted={() => tasks.toggleCompleted(task)}\n        />\n      )}\n    />\n  );\n};\n\nexport default TaskList;\n","import React, { useCallback } from 'react';\nimport { Query } from 'hooks/useTasks';\nimport Header from 'components/base/Header';\nimport TaskList from 'containers/tasks/List';\nimport AddToInbox from 'containers/tasks/AddToInbox';\nimport { In, IsNull } from 'typeorm';\nimport Page from 'components/Page';\n\nconst BacklogScreen: React.FC<{}> = () => {\n  const query: Query = useCallback(\n    q => q.where({\n      completionDate: IsNull(),\n      status: In(['inbox', 'backlog'])\n    }),\n    [],\n  );\n\n  return (\n    <Page>\n      <Header title=\"Planning\" />\n      <AddToInbox />\n      <TaskList query={query} />\n    </Page>\n  )\n};\n\nexport default BacklogScreen;\n","import React, { useCallback } from 'react';\nimport { Query } from 'hooks/useTasks';\nimport Header from 'components/base/Header';\nimport TaskList from 'containers/tasks/List';\nimport { IsNull, Not } from 'typeorm';\nimport Page from 'components/Page';\n\nconst CompletedScreen: React.FC<{}> = () => {\n  const query: Query = useCallback(\n    q => q.where({\n      completionDate: Not(IsNull()),\n    }),\n    [],\n  );\n\n  return (\n    <Page>\n      <Header\n        title=\"Completed\"\n        back\n      />\n      <TaskList query={query} />\n    </Page>\n  )\n};\n\nexport default CompletedScreen;\n","import React, { useCallback } from 'react';\nimport { Query } from 'hooks/useTasks';\nimport Header from 'components/base/Header';\nimport TaskList from 'containers/tasks/List';\nimport { IsNull } from 'typeorm';\nimport Page from 'components/Page';\n\nconst WatchingScreen: React.FC<{}> = () => {\n  const query: Query = useCallback(q => q.where({ status: 'watching', completionDate: IsNull() }), []);\n\n  return (\n    <Page>\n      <Header\n        title=\"Watching\"\n        back\n      />\n      <TaskList query={query} />\n    </Page>\n  )\n};\n\nexport default WatchingScreen;\n","import React, { useState, useCallback } from 'react';\nimport useAddTask from 'hooks/useAddTask';\nimport { useNavigation } from '@react-navigation/native';\nimport { RootStackNavigationProps } from 'Router';\nimport { Ionicons } from '@expo/vector-icons';\nimport Header from 'components/base/Header';\nimport Row, { Cell } from 'components/base/Row';\nimport Input from 'components/base/Input';\n\nconst TaskListScreen: React.FC<{}> = () => {\n  const navigation = useNavigation<RootStackNavigationProps>();\n  const [title, setTitle] = useState('');\n  const addTask = useAddTask();\n  const add = useCallback(async () => {\n    await addTask(title);\n    navigation.goBack();\n  }, [addTask, title, navigation]);\n\n  return (\n    <>\n      <Header\n        title=\"Add Task\"\n        back\n        right={(\n          <Cell onPress={add}>\n            <Ionicons size={26} name=\"add-circle-outline\" />\n          </Cell>\n        )}\n      />\n      <Row>\n        <Input\n          label=\"Title\"\n          value={title}\n          onChangeText={setTitle}\n        />\n      </Row>\n    </>\n  )\n};\n\nexport default TaskListScreen;\n","import React from 'react';\nimport styled from 'styled-components/native';\nimport { useNavigation } from '@react-navigation/native';\nimport { MoreStackNavigationProps } from 'Router';\nimport Header from 'components/base/Header';\nimport Page from 'components/Page';\nimport Row, { Cell } from 'components/base/Row';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst Scroll = styled.ScrollView`\n  flex: 1;\n`\nconst MoreMain: React.FC<{}> = () => {\n  const navigation = useNavigation<MoreStackNavigationProps>();\n  return (\n    <Page>\n      <Header title=\"More\" />\n      <Scroll>\n        <Row\n          title=\"Watching\"\n          onPress={() => navigation.navigate('Watching')}\n          left={(\n            <Cell><Ionicons name=\"eye-outline\" size={26} /></Cell>\n          )}\n          right={(\n            <Cell><Ionicons name=\"chevron-forward-outline\" size={26} /></Cell>\n          )}\n        />\n        <Row\n          title=\"Completed\"\n          onPress={() => navigation.navigate('Completed')}\n          left={(\n            <Cell><Ionicons name=\"checkmark-circle-outline\" size={26} /></Cell>\n          )}\n          right={(\n            <Cell><Ionicons name=\"chevron-forward-outline\" size={26} /></Cell>\n          )}\n        />\n      </Scroll>\n    </Page>\n  );\n};\n\nexport default MoreMain;\n","import { useContext, useCallback, useEffect } from 'react';\nimport ServicesContext from 'contexts/ServicesContext';\nimport useAsync from './useAsync';\n\nconst useTasks = (id: string) => {\n  const { taskService } = useContext(ServicesContext);\n  const fetch = useCallback(async () => {\n    const result = await taskService.getById(id)\n    return result;\n  }, [id]);\n  const current = useAsync(fetch);\n\n  useEffect(() => {\n    const listener = (id?: string) => {\n      if (id === current.result?.id) {\n        current.update();\n      }\n    };\n    taskService.addListener('taskUpdated', listener);\n    return () => {\n      taskService.removeListener('taskUpdated', listener);\n    };\n  }, [taskService, current.result]);\n\n  return {\n    ...current,\n    service: taskService,\n  };\n};\n\nexport default useTasks;\n","import React, { useCallback } from 'react';\nimport { useRoute } from '@react-navigation/native';\nimport Header from 'components/base/Header';\nimport ListItem from 'components/task/ListItem';\nimport useTask from 'hooks/useTask';\nimport { Statuses } from 'models/LocalTask';\n\nconst TaskDetails: React.FC<{}> = () => {\n  const route = useRoute();\n  // TODO: Fix type\n  const task = useTask((route.params as any).id);\n\n  const changeStatus = useCallback(async (status: Statuses) => {\n    if (!task.result) return;\n    await task.service.setStatus(task.result, status);\n  }, [task.service, task.result]);\n\n  const toggleCompleted = useCallback(async () => {\n    if (!task.result) return;\n    await task.service.toggleCompleted(task.result);\n  }, [task.service, task.result]);\n\n  const togglePinned = useCallback(async () => {\n    if (!task.result) return;\n    await task.service.togglePinned(task.result);\n  }, [task.service, task.result]);\n\n  if (!task.result) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Header title=\"Details\" back />\n      <ListItem\n        task={task.result}\n        changeStatus={changeStatus}\n        toggleCompleted={toggleCompleted}\n        togglePinned={togglePinned}\n      />\n    </>\n  );\n}\n\nexport default TaskDetails;\n","import React from 'react';\nimport { NavigationContainer, NavigatorScreenParams } from '@react-navigation/native';\nimport { createStackNavigator, StackNavigationProp } from '@react-navigation/stack';\nimport { createBottomTabNavigator, BottomTabNavigationProp } from '@react-navigation/bottom-tabs';\nimport Today from 'screens/tasks/Today';\nimport Backlog from 'screens/tasks/Backlog';\nimport Completed from 'screens/tasks/Completed';\nimport Watching from 'screens/tasks/Watching';\nimport AddTask from 'screens/tasks/Add';\nimport MoreMain from 'screens/more/Main';\nimport TaskDetails from 'screens/tasks/Details';\nimport { Ionicons } from '@expo/vector-icons';\n\ntype TaskStackParamList = {\n  TaskDetails: { id: string};\n};\n\ntype TaskStackNavigationProps = StackNavigationProp<TaskStackParamList>;\n\nconst TaskStack = createStackNavigator<TaskStackParamList>();\n\nconst TaskStackScreen: React.FC<{}> = () => (\n  <TaskStack.Navigator screenOptions={{ headerShown: false }}>\n    <TaskStack.Screen name=\"TaskDetails\" component={TaskDetails} />\n  </TaskStack.Navigator>\n);\n\ntype MoreStackParamList = {\n  Main: undefined;\n  Completed: undefined;\n  Watching: undefined;\n}\n\ntype MoreStackNavigationProps = StackNavigationProp<MoreStackParamList>;\n\nconst MoreStack = createStackNavigator();\n\nconst MoreStackScreen: React.FC<{}> = () => (\n  <MoreStack.Navigator screenOptions={{ headerShown: false }}>\n    <MoreStack.Screen name=\"Main\" component={MoreMain} />\n    <MoreStack.Screen name=\"Watching\" component={Watching} />\n    <MoreStack.Screen name=\"Completed\" component={Completed} />\n  </MoreStack.Navigator>\n);\n\ntype MainTabParamList = {\n  Today: undefined;\n  Planning: undefined;\n  Watching: undefined;\n  More: StackNavigationProp<MoreStackParamList>;\n};\n\ntype MainTabNavigationProps = BottomTabNavigationProp<MainTabParamList>;\n\nconst MainTab = createBottomTabNavigator<MainTabParamList>();\n\nconst MainTabScreen: React.FC<{}> = () => (\n  <MainTab.Navigator screenOptions={{ headerShown: false }}>\n    <MainTab.Screen\n      options={{ tabBarIcon: () => <Ionicons name=\"bookmark-outline\" size={26} />}}\n      name=\"Today\"\n      component={Today}\n    />\n    <MainTab.Screen\n      options={{ tabBarIcon: () => <Ionicons name=\"albums-outline\" size={26} />}}\n      name=\"Planning\"\n      component={Backlog}\n    />\n    <MainTab.Screen\n      options={{ tabBarIcon: () => <Ionicons name=\"menu\" size={26} />}}\n      name=\"More\"\n      component={MoreStackScreen}\n    />\n  </MainTab.Navigator>\n);\n\ntype RootStackParamList = {\n  Main: NavigatorScreenParams<MainTabParamList>;\n  AddTask: undefined;\n  Task: NavigatorScreenParams<TaskStackParamList>;\n}\n\ntype RootStackNavigationProps = StackNavigationProp<RootStackParamList>;\n\nconst RootStack = createStackNavigator<RootStackParamList>();\n\nconst RootStackScreen: React.FC<{}> = () => (\n  <RootStack.Navigator screenOptions={{ headerShown: false }}>\n    <RootStack.Group>\n      <RootStack.Screen name=\"Main\" component={MainTabScreen} />\n    </RootStack.Group>\n    <RootStack.Group screenOptions={{ presentation: 'modal' }}>\n      <RootStack.Screen name=\"AddTask\" component={AddTask} />\n    </RootStack.Group>\n    <RootStack.Group screenOptions={{ presentation: 'modal' }}>\n      <RootStack.Screen name=\"Task\" component={TaskStackScreen} />\n    </RootStack.Group>\n  </RootStack.Navigator>\n);\n\nconst Router: React.FC<{}> = () => (\n  <NavigationContainer>\n    <RootStackScreen />\n  </NavigationContainer>\n);\n\nexport type {\n  TaskStackParamList,\n  TaskStackNavigationProps,\n  MoreStackParamList,\n  MoreStackNavigationProps,\n  MainTabParamList,\n  MainTabNavigationProps,\n  RootStackParamList,\n  RootStackNavigationProps,\n};\n\nexport default Router;\n","import Theme from './Theme';\n\nconst lightTheme: Theme = {\n  colors: {\n    primary: '#1abc9c',\n    shade: '#ededed',\n    secondary: 'blue',\n    background: '#fff',\n    text: '#000',\n  },\n  sizes: {\n    corners: 5,\n  },\n  margins: {\n    small: 8,\n    medium: 16,\n    large: 24,\n  },\n  font: {\n    baseSize: 14,\n  },\n};\n\nexport default lightTheme;\n","import 'react-native-get-random-values';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport { ThemeProvider } from 'styled-components/native';\nimport React from 'react';\nimport { View } from 'react-native';\nimport { ServicesProvider } from 'contexts/ServicesContext';\nimport Router from 'Router';\nimport { light } from 'theme';\n\nconst App: React.FC<{}> = () => (\n  <SafeAreaProvider>\n    <ThemeProvider theme={light}>\n      <ServicesProvider>\n        <View style={{ flex: 1 }}>\n          <Router />\n          <StatusBar style=\"auto\" />\n        </View>\n      </ServicesProvider>\n    </ThemeProvider>\n  </SafeAreaProvider>\n);\n\nexport default App;\n","import 'reflect-metadata';\nimport * as Expo from 'expo'\n// import * as Sentry from 'sentry-expo';\nimport App from './App';\n\n/* if (!__DEV__) {\n  Sentry.init({\n    dsn: process.env.SENTRY_DSN,\n  });\n}*/\n\nexport default Expo.registerRootComponent(App);\n"],"sourceRoot":""}